/kuacc/users/ajamshidi18/.conda/envs/py38_env/lib/python3.8/site-packages/torch/cuda/__init__.py:88: UserWarning: CUDA initialization: CUDA unknown error - this may be due to an incorrectly set up environment, e.g. changing env variable CUDA_VISIBLE_DEVICES after program start. Setting the available devices to be zero. (Triggered internally at ../c10/cuda/CUDAFunctions.cpp:109.)
  return torch._C._cuda_getDeviceCount() > 0
/scratch/users/ajamshidi18/hpc_run/Ainaz/RL/lane-change/my_REM/loss.py:19: UserWarning: Using a target size (torch.Size([5])) that is different to the input size (torch.Size([5, 5])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  loss = F.huber_loss(max_q_target.detach(),online_est_q, reduction = 'mean', delta = self.delta)
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0048,  0.0002,  0.0004, -0.0041,  0.0043],
        [-0.0041,  0.0001,  0.0023, -0.0033,  0.0049],
        [-0.0039,  0.0003,  0.0018, -0.0041,  0.0035],
        [-0.0040,  0.0027,  0.0031, -0.0038,  0.0039],
        [-0.0055,  0.0013,  0.0018, -0.0043,  0.0036]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-3.5608e-03,  2.3326e-03,  3.1338e-03, -3.7655e-03,  5.7740e-03],
        [-5.5389e-03,  1.3729e-03,  2.1157e-03, -7.8795e-03,  2.7404e-03],
        [-4.6274e-03,  1.3417e-03,  7.0367e-04, -3.1313e-03,  6.3285e-03],
        [-5.2743e-03,  1.9717e-04,  9.3527e-05, -8.3197e-03,  2.9440e-03],
        [-4.3219e-03,  5.2514e-04,  1.0274e-03, -3.8658e-03,  5.0877e-03]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-4.8889e-03,  3.7069e-05,  9.3760e-04, -3.5432e-03,  6.4754e-03],
        [-4.2404e-03, -1.8378e-05,  2.8123e-03, -2.8648e-03,  7.1378e-03],
        [-4.0359e-03,  1.8776e-04,  2.2663e-03, -3.6014e-03,  5.6954e-03],
        [-4.1713e-03,  2.6061e-03,  3.4795e-03, -3.2233e-03,  6.0072e-03],
        [-5.6090e-03,  1.1353e-03,  2.2252e-03, -3.7820e-03,  5.6466e-03]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-3.6383e-03,  2.2283e-03,  4.0118e-03, -2.7743e-03,  7.9003e-03],
        [-5.6059e-03,  1.2367e-03,  2.9755e-03, -6.5117e-03,  4.8228e-03],
        [-4.7710e-03,  1.2349e-03,  1.6520e-03, -2.1775e-03,  8.5849e-03],
        [-5.3666e-03,  4.2968e-05,  9.5860e-04, -7.0673e-03,  5.0077e-03],
        [-4.4492e-03,  3.9423e-04,  1.9178e-03, -2.8933e-03,  7.1130e-03]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-4.9677e-03, -1.0509e-04,  1.8452e-03, -2.6166e-03,  8.5832e-03],
        [-4.3634e-03, -1.4105e-04,  3.7293e-03, -1.9873e-03,  9.2688e-03],
        [-4.1503e-03,  5.6951e-05,  3.1634e-03, -2.6705e-03,  7.7843e-03],
        [-4.2792e-03,  2.4891e-03,  4.2782e-03, -2.2334e-03,  8.0101e-03],
        [-5.7096e-03,  1.0003e-03,  3.0571e-03, -2.8386e-03,  7.6563e-03]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0037,  0.0021,  0.0049, -0.0018,  0.0100],
        [-0.0057,  0.0011,  0.0038, -0.0052,  0.0069],
        [-0.0049,  0.0011,  0.0026, -0.0012,  0.0108],
        [-0.0054, -0.0001,  0.0018, -0.0058,  0.0070],
        [-0.0046,  0.0002,  0.0028, -0.0019,  0.0091]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-5.0647e-03, -2.3870e-04,  2.7733e-03, -1.6716e-03,  1.0679e-02],
        [-4.5071e-03, -2.7386e-04,  4.6606e-03, -1.0803e-03,  1.1377e-02],
        [-4.2806e-03, -6.3409e-05,  4.0796e-03, -1.7206e-03,  9.8571e-03],
        [-4.3932e-03,  2.3750e-03,  5.1089e-03, -1.2285e-03,  9.9969e-03],
        [-5.8148e-03,  8.7546e-04,  3.9267e-03, -1.8904e-03,  9.6794e-03]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0038,  0.0020,  0.0058, -0.0008,  0.0121],
        [-0.0058,  0.0009,  0.0047, -0.0038,  0.0090],
        [-0.0050,  0.0010,  0.0035, -0.0002,  0.0130],
        [-0.0055, -0.0003,  0.0028, -0.0045,  0.0091],
        [-0.0047,  0.0001,  0.0037, -0.0009,  0.0111]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0052, -0.0004,  0.0037, -0.0007,  0.0128],
        [-0.0046, -0.0004,  0.0056, -0.0001,  0.0135],
        [-0.0044, -0.0002,  0.0050, -0.0007,  0.0119],
        [-0.0045,  0.0023,  0.0060, -0.0002,  0.0120],
        [-0.0059,  0.0008,  0.0048, -0.0009,  0.0117]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-3.8874e-03,  1.9117e-03,  6.7685e-03,  2.0210e-04,  1.4249e-02],
        [-5.8346e-03,  8.0310e-04,  5.6496e-03, -2.4409e-03,  1.1031e-02],
        [-5.1203e-03,  9.0563e-04,  4.5287e-03,  7.5234e-04,  1.5278e-02],
        [-5.6342e-03, -4.4175e-04,  3.6815e-03, -3.2433e-03,  1.1124e-02],
        [-4.8379e-03, -1.8595e-05,  4.6728e-03,  5.3704e-05,  1.3093e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-5.2678e-03, -4.8120e-04,  4.7008e-03,  2.7290e-04,  1.4918e-02],
        [-4.7766e-03, -5.2185e-04,  6.5681e-03,  7.8597e-04,  1.5678e-02],
        [-4.5353e-03, -2.8862e-04,  5.9786e-03,  2.5318e-04,  1.4052e-02],
        [-4.6018e-03,  2.1424e-03,  6.8475e-03,  8.4476e-04,  1.4018e-02],
        [-6.0230e-03,  6.2463e-04,  5.7292e-03,  6.2188e-05,  1.3786e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0040,  0.0018,  0.0077,  0.0012,  0.0164],
        [-0.0059,  0.0006,  0.0066, -0.0011,  0.0131],
        [-0.0052,  0.0008,  0.0056,  0.0017,  0.0176],
        [-0.0057, -0.0006,  0.0046, -0.0020,  0.0132],
        [-0.0050, -0.0002,  0.0056,  0.0010,  0.0151]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0054, -0.0006,  0.0057,  0.0013,  0.0171],
        [-0.0049, -0.0007,  0.0076,  0.0017,  0.0179],
        [-0.0047, -0.0004,  0.0070,  0.0012,  0.0162],
        [-0.0047,  0.0020,  0.0078,  0.0019,  0.0161],
        [-0.0061,  0.0005,  0.0067,  0.0011,  0.0159]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0040,  0.0017,  0.0087,  0.0022,  0.0186],
        [-0.0060,  0.0005,  0.0075,  0.0003,  0.0152],
        [-0.0053,  0.0007,  0.0066,  0.0027,  0.0199],
        [-0.0058, -0.0008,  0.0056, -0.0007,  0.0153],
        [-0.0051, -0.0003,  0.0066,  0.0021,  0.0172]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0055, -0.0007,  0.0067,  0.0023,  0.0193],
        [-0.0050, -0.0008,  0.0086,  0.0027,  0.0201],
        [-0.0048, -0.0005,  0.0080,  0.0023,  0.0184],
        [-0.0048,  0.0019,  0.0087,  0.0029,  0.0182],
        [-0.0062,  0.0004,  0.0076,  0.0021,  0.0180]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0041,  0.0016,  0.0098,  0.0032,  0.0209],
        [-0.0060,  0.0004,  0.0085,  0.0016,  0.0174],
        [-0.0054,  0.0006,  0.0077,  0.0038,  0.0222],
        [-0.0059, -0.0009,  0.0066,  0.0006,  0.0174],
        [-0.0051, -0.0004,  0.0076,  0.0031,  0.0193]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0056, -0.0008,  0.0078,  0.0033,  0.0215],
        [-0.0051, -0.0009,  0.0096,  0.0037,  0.0224],
        [-0.0049, -0.0006,  0.0090,  0.0033,  0.0206],
        [-0.0048,  0.0018,  0.0097,  0.0039,  0.0203],
        [-0.0063,  0.0002,  0.0086,  0.0032,  0.0202]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0042,  0.0015,  0.0109,  0.0043,  0.0232],
        [-0.0061,  0.0003,  0.0095,  0.0030,  0.0196],
        [-0.0055,  0.0004,  0.0088,  0.0048,  0.0246],
        [-0.0061, -0.0010,  0.0076,  0.0019,  0.0195],
        [-0.0052, -0.0005,  0.0087,  0.0041,  0.0215]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-5.7085e-03, -9.9749e-04,  8.8539e-03,  4.4165e-03,  2.3816e-02],
        [-5.2572e-03, -1.0561e-03,  1.0689e-02,  4.6736e-03,  2.4777e-02],
        [-4.9651e-03, -6.9313e-04,  1.0076e-02,  4.3602e-03,  2.2893e-02],
        [-4.8650e-03,  1.7304e-03,  1.0703e-02,  5.0262e-03,  2.2506e-02],
        [-6.4098e-03,  8.9675e-05,  9.6483e-03,  4.2522e-03,  2.2442e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0043,  0.0014,  0.0120,  0.0054,  0.0255],
        [-0.0061,  0.0002,  0.0105,  0.0045,  0.0219],
        [-0.0056,  0.0003,  0.0099,  0.0059,  0.0271],
        [-0.0062, -0.0012,  0.0086,  0.0032,  0.0218],
        [-0.0053, -0.0007,  0.0097,  0.0053,  0.0237]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-5.8272e-03, -1.1350e-03,  9.9733e-03,  5.5440e-03,  2.6186e-02],
        [-5.3899e-03, -1.2002e-03,  1.1783e-02,  5.7228e-03,  2.7189e-02],
        [-5.0656e-03, -8.1093e-04,  1.1172e-02,  5.4440e-03,  2.5241e-02],
        [-4.9343e-03,  1.6139e-03,  1.1762e-02,  6.1272e-03,  2.4768e-02],
        [-6.5070e-03, -5.9180e-05,  1.0706e-02,  5.3844e-03,  2.4742e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-4.3930e-03,  1.2445e-03,  1.3127e-02,  6.5048e-03,  2.7956e-02],
        [-6.1713e-03,  3.6398e-05,  1.1542e-02,  5.9099e-03,  2.4242e-02],
        [-5.7404e-03,  1.4072e-04,  1.1035e-02,  7.0334e-03,  2.9597e-02],
        [-6.3046e-03, -1.3771e-03,  9.7099e-03,  4.5571e-03,  2.4038e-02],
        [-5.3966e-03, -7.7941e-04,  1.0838e-02,  6.4022e-03,  2.5967e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0060, -0.0013,  0.0111,  0.0067,  0.0286],
        [-0.0055, -0.0013,  0.0129,  0.0068,  0.0297],
        [-0.0052, -0.0009,  0.0123,  0.0066,  0.0276],
        [-0.0050,  0.0015,  0.0129,  0.0073,  0.0271],
        [-0.0066, -0.0002,  0.0118,  0.0065,  0.0271]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-4.4798e-03,  1.1262e-03,  1.4335e-02,  7.6753e-03,  3.0444e-02],
        [-6.2401e-03, -1.1047e-04,  1.2648e-02,  7.3934e-03,  2.6624e-02],
        [-5.8679e-03, -5.4079e-06,  1.2223e-02,  8.2008e-03,  3.2182e-02],
        [-6.4464e-03, -1.5540e-03,  1.0842e-02,  5.9367e-03,  2.6388e-02],
        [-5.5004e-03, -9.1863e-04,  1.1977e-02,  7.5583e-03,  2.8330e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0061, -0.0014,  0.0123,  0.0079,  0.0312],
        [-0.0057, -0.0015,  0.0141,  0.0079,  0.0322],
        [-0.0053, -0.0011,  0.0135,  0.0077,  0.0301],
        [-0.0051,  0.0014,  0.0140,  0.0084,  0.0295],
        [-0.0067, -0.0004,  0.0129,  0.0078,  0.0295]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0046,  0.0010,  0.0156,  0.0089,  0.0330],
        [-0.0063, -0.0003,  0.0138,  0.0089,  0.0291],
        [-0.0060, -0.0002,  0.0135,  0.0095,  0.0349],
        [-0.0066, -0.0017,  0.0120,  0.0074,  0.0288],
        [-0.0056, -0.0011,  0.0132,  0.0088,  0.0308]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0062, -0.0016,  0.0136,  0.0091,  0.0338],
        [-0.0058, -0.0017,  0.0153,  0.0091,  0.0348],
        [-0.0054, -0.0012,  0.0147,  0.0089,  0.0327],
        [-0.0052,  0.0013,  0.0153,  0.0097,  0.0320],
        [-0.0068, -0.0005,  0.0141,  0.0090,  0.0321]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0046,  0.0009,  0.0169,  0.0102,  0.0357],
        [-0.0064, -0.0004,  0.0150,  0.0105,  0.0317],
        [-0.0061, -0.0003,  0.0148,  0.0108,  0.0376],
        [-0.0067, -0.0019,  0.0132,  0.0088,  0.0314],
        [-0.0057, -0.0012,  0.0144,  0.0100,  0.0333]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0063, -0.0017,  0.0149,  0.0104,  0.0365],
        [-0.0059, -0.0018,  0.0166,  0.0104,  0.0376],
        [-0.0055, -0.0014,  0.0160,  0.0101,  0.0354],
        [-0.0052,  0.0011,  0.0166,  0.0109,  0.0345],
        [-0.0069, -0.0007,  0.0154,  0.0104,  0.0347]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0047,  0.0008,  0.0183,  0.0115,  0.0384],
        [-0.0064, -0.0006,  0.0163,  0.0121,  0.0343],
        [-0.0062, -0.0005,  0.0161,  0.0121,  0.0405],
        [-0.0068, -0.0021,  0.0145,  0.0103,  0.0340],
        [-0.0058, -0.0013,  0.0157,  0.0113,  0.0360]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0064, -0.0019,  0.0163,  0.0117,  0.0393],
        [-0.0060, -0.0020,  0.0179,  0.0117,  0.0404],
        [-0.0056, -0.0015,  0.0174,  0.0114,  0.0381],
        [-0.0053,  0.0010,  0.0179,  0.0123,  0.0372],
        [-0.0070, -0.0008,  0.0167,  0.0117,  0.0374]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0048,  0.0006,  0.0197,  0.0128,  0.0413],
        [-0.0065, -0.0007,  0.0176,  0.0139,  0.0371],
        [-0.0064, -0.0007,  0.0176,  0.0136,  0.0434],
        [-0.0070, -0.0022,  0.0158,  0.0119,  0.0367],
        [-0.0059, -0.0015,  0.0171,  0.0127,  0.0387]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0066, -0.0020,  0.0177,  0.0132,  0.0422],
        [-0.0062, -0.0022,  0.0194,  0.0131,  0.0433],
        [-0.0057, -0.0017,  0.0188,  0.0128,  0.0410],
        [-0.0054,  0.0009,  0.0193,  0.0137,  0.0400],
        [-0.0072, -0.0010,  0.0180,  0.0132,  0.0402]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0049,  0.0005,  0.0212,  0.0143,  0.0443],
        [-0.0066, -0.0009,  0.0190,  0.0157,  0.0400],
        [-0.0065, -0.0008,  0.0191,  0.0151,  0.0466],
        [-0.0071, -0.0024,  0.0172,  0.0136,  0.0396],
        [-0.0060, -0.0016,  0.0185,  0.0142,  0.0415]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0067, -0.0022,  0.0192,  0.0147,  0.0452],
        [-0.0063, -0.0024,  0.0209,  0.0146,  0.0464],
        [-0.0058, -0.0018,  0.0203,  0.0142,  0.0440],
        [-0.0054,  0.0007,  0.0208,  0.0152,  0.0429],
        [-0.0073, -0.0012,  0.0195,  0.0147,  0.0431]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0050,  0.0003,  0.0228,  0.0157,  0.0475],
        [-0.0067, -0.0011,  0.0205,  0.0176,  0.0430],
        [-0.0066, -0.0010,  0.0207,  0.0166,  0.0498],
        [-0.0072, -0.0026,  0.0187,  0.0152,  0.0426],
        [-0.0060, -0.0018,  0.0200,  0.0157,  0.0445]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0068, -0.0024,  0.0208,  0.0162,  0.0484],
        [-0.0064, -0.0025,  0.0225,  0.0161,  0.0495],
        [-0.0059, -0.0020,  0.0219,  0.0157,  0.0471],
        [-0.0055,  0.0006,  0.0223,  0.0167,  0.0459],
        [-0.0074, -0.0013,  0.0210,  0.0163,  0.0462]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0051,  0.0002,  0.0244,  0.0172,  0.0508],
        [-0.0068, -0.0013,  0.0221,  0.0195,  0.0462],
        [-0.0067, -0.0012,  0.0224,  0.0182,  0.0531],
        [-0.0073, -0.0028,  0.0203,  0.0170,  0.0456],
        [-0.0061, -0.0019,  0.0216,  0.0172,  0.0476]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0070, -0.0025,  0.0225,  0.0178,  0.0517],
        [-0.0065, -0.0027,  0.0241,  0.0177,  0.0529],
        [-0.0060, -0.0022,  0.0235,  0.0173,  0.0504],
        [-0.0056,  0.0004,  0.0240,  0.0184,  0.0491],
        [-0.0075, -0.0015,  0.0227,  0.0179,  0.0494]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-5.1773e-03,  1.9138e-05,  2.6191e-02,  1.8874e-02,  5.4188e-02],
        [-6.8834e-03, -1.5086e-03,  2.3807e-02,  2.1421e-02,  4.9532e-02],
        [-6.8618e-03, -1.3877e-03,  2.4155e-02,  1.9934e-02,  5.6659e-02],
        [-7.4424e-03, -3.0409e-03,  2.1905e-02,  1.8791e-02,  4.8847e-02],
        [-6.2525e-03, -2.1317e-03,  2.3295e-02,  1.8852e-02,  5.0909e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0071, -0.0027,  0.0242,  0.0195,  0.0551],
        [-0.0067, -0.0029,  0.0259,  0.0194,  0.0564],
        [-0.0062, -0.0024,  0.0253,  0.0190,  0.0537],
        [-0.0057,  0.0003,  0.0257,  0.0201,  0.0524],
        [-0.0076, -0.0017,  0.0244,  0.0196,  0.0527]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0053, -0.0002,  0.0281,  0.0206,  0.0578],
        [-0.0070, -0.0017,  0.0256,  0.0235,  0.0530],
        [-0.0070, -0.0016,  0.0260,  0.0217,  0.0603],
        [-0.0076, -0.0033,  0.0236,  0.0207,  0.0522],
        [-0.0064, -0.0023,  0.0251,  0.0206,  0.0543]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-7.2653e-03, -2.9058e-03,  2.6091e-02,  2.1322e-02,  5.8607e-02],
        [-6.8089e-03, -3.0693e-03,  2.7791e-02,  2.1155e-02,  6.0048e-02],
        [-6.2934e-03, -2.5496e-03,  2.7100e-02,  2.0733e-02,  5.7263e-02],
        [-5.8056e-03,  5.9999e-05,  2.7538e-02,  2.1868e-02,  5.5849e-02],
        [-7.7397e-03, -1.9598e-03,  2.6187e-02,  2.1384e-02,  5.6180e-02]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0054, -0.0004,  0.0300,  0.0225,  0.0615],
        [-0.0071, -0.0019,  0.0275,  0.0256,  0.0567],
        [-0.0072, -0.0018,  0.0280,  0.0236,  0.0641],
        [-0.0077, -0.0035,  0.0254,  0.0227,  0.0557],
        [-0.0065, -0.0025,  0.0270,  0.0224,  0.0579]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0074, -0.0031,  0.0281,  0.0232,  0.0623],
        [-0.0070, -0.0033,  0.0298,  0.0230,  0.0639],
        [-0.0064, -0.0028,  0.0291,  0.0226,  0.0610],
        [-0.0059, -0.0001,  0.0295,  0.0238,  0.0595],
        [-0.0079, -0.0022,  0.0281,  0.0233,  0.0598]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0055, -0.0006,  0.0321,  0.0244,  0.0654],
        [-0.0072, -0.0021,  0.0294,  0.0279,  0.0605],
        [-0.0073, -0.0021,  0.0301,  0.0256,  0.0681],
        [-0.0078, -0.0037,  0.0273,  0.0248,  0.0594],
        [-0.0066, -0.0027,  0.0290,  0.0243,  0.0616]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0076, -0.0033,  0.0301,  0.0252,  0.0662],
        [-0.0071, -0.0035,  0.0319,  0.0250,  0.0679],
        [-0.0065, -0.0030,  0.0312,  0.0246,  0.0648],
        [-0.0060, -0.0003,  0.0315,  0.0258,  0.0633],
        [-0.0080, -0.0024,  0.0301,  0.0253,  0.0636]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0055, -0.0008,  0.0343,  0.0265,  0.0695],
        [-0.0073, -0.0024,  0.0315,  0.0302,  0.0645],
        [-0.0074, -0.0023,  0.0324,  0.0277,  0.0723],
        [-0.0080, -0.0039,  0.0293,  0.0269,  0.0632],
        [-0.0067, -0.0029,  0.0311,  0.0263,  0.0655]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0077, -0.0036,  0.0323,  0.0273,  0.0703],
        [-0.0072, -0.0037,  0.0341,  0.0271,  0.0721],
        [-0.0067, -0.0032,  0.0333,  0.0266,  0.0689],
        [-0.0061, -0.0006,  0.0337,  0.0278,  0.0673],
        [-0.0081, -0.0026,  0.0322,  0.0274,  0.0676]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0056, -0.0011,  0.0366,  0.0288,  0.0738],
        [-0.0074, -0.0026,  0.0337,  0.0326,  0.0687],
        [-0.0076, -0.0026,  0.0347,  0.0299,  0.0766],
        [-0.0081, -0.0041,  0.0314,  0.0292,  0.0672],
        [-0.0068, -0.0031,  0.0333,  0.0285,  0.0696]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0079, -0.0038,  0.0346,  0.0295,  0.0746],
        [-0.0074, -0.0039,  0.0365,  0.0294,  0.0766],
        [-0.0068, -0.0035,  0.0356,  0.0288,  0.0731],
        [-0.0062, -0.0008,  0.0359,  0.0301,  0.0714],
        [-0.0083, -0.0028,  0.0345,  0.0296,  0.0717]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0057, -0.0013,  0.0391,  0.0311,  0.0783],
        [-0.0075, -0.0028,  0.0360,  0.0352,  0.0731],
        [-0.0077, -0.0028,  0.0372,  0.0323,  0.0812],
        [-0.0083, -0.0043,  0.0336,  0.0317,  0.0715],
        [-0.0069, -0.0034,  0.0356,  0.0307,  0.0739]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0080, -0.0040,  0.0371,  0.0318,  0.0790],
        [-0.0075, -0.0041,  0.0389,  0.0318,  0.0812],
        [-0.0069, -0.0037,  0.0381,  0.0311,  0.0775],
        [-0.0063, -0.0010,  0.0383,  0.0324,  0.0758],
        [-0.0084, -0.0031,  0.0368,  0.0319,  0.0761]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0058, -0.0016,  0.0416,  0.0336,  0.0830],
        [-0.0076, -0.0031,  0.0384,  0.0379,  0.0777],
        [-0.0079, -0.0031,  0.0398,  0.0348,  0.0860],
        [-0.0084, -0.0045,  0.0359,  0.0342,  0.0759],
        [-0.0070, -0.0036,  0.0380,  0.0331,  0.0783]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0082, -0.0043,  0.0396,  0.0343,  0.0837],
        [-0.0076, -0.0044,  0.0416,  0.0343,  0.0860],
        [-0.0070, -0.0040,  0.0406,  0.0335,  0.0822],
        [-0.0064, -0.0013,  0.0408,  0.0348,  0.0803],
        [-0.0086, -0.0033,  0.0393,  0.0344,  0.0806]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0059, -0.0018,  0.0443,  0.0362,  0.0879],
        [-0.0077, -0.0033,  0.0409,  0.0407,  0.0825],
        [-0.0080, -0.0034,  0.0425,  0.0374,  0.0909],
        [-0.0085, -0.0048,  0.0384,  0.0369,  0.0805],
        [-0.0071, -0.0038,  0.0406,  0.0356,  0.0830]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0083, -0.0045,  0.0423,  0.0369,  0.0885],
        [-0.0077, -0.0046,  0.0443,  0.0370,  0.0910],
        [-0.0071, -0.0042,  0.0432,  0.0361,  0.0870],
        [-0.0065, -0.0015,  0.0434,  0.0374,  0.0851],
        [-0.0087, -0.0035,  0.0419,  0.0371,  0.0854]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0060, -0.0021,  0.0472,  0.0390,  0.0930],
        [-0.0078, -0.0036,  0.0436,  0.0436,  0.0874],
        [-0.0082, -0.0036,  0.0454,  0.0402,  0.0961],
        [-0.0087, -0.0050,  0.0410,  0.0397,  0.0853],
        [-0.0072, -0.0041,  0.0433,  0.0382,  0.0878]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0084, -0.0048,  0.0451,  0.0397,  0.0936],
        [-0.0079, -0.0049,  0.0472,  0.0398,  0.0963],
        [-0.0072, -0.0044,  0.0460,  0.0388,  0.0920],
        [-0.0066, -0.0017,  0.0462,  0.0401,  0.0900],
        [-0.0088, -0.0038,  0.0446,  0.0398,  0.0904]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0061, -0.0024,  0.0501,  0.0419,  0.0983],
        [-0.0079, -0.0038,  0.0464,  0.0467,  0.0927],
        [-0.0083, -0.0039,  0.0484,  0.0431,  0.1016],
        [-0.0088, -0.0052,  0.0437,  0.0426,  0.0904],
        [-0.0073, -0.0043,  0.0461,  0.0410,  0.0929]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0085, -0.0050,  0.0480,  0.0426,  0.0989],
        [-0.0080, -0.0052,  0.0502,  0.0427,  0.1018],
        [-0.0073, -0.0046,  0.0489,  0.0417,  0.0973],
        [-0.0067, -0.0020,  0.0491,  0.0430,  0.0952],
        [-0.0090, -0.0040,  0.0475,  0.0427,  0.0955]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0062, -0.0026,  0.0533,  0.0449,  0.1039],
        [-0.0080, -0.0041,  0.0494,  0.0499,  0.0981],
        [-0.0085, -0.0042,  0.0516,  0.0462,  0.1072],
        [-0.0089, -0.0054,  0.0466,  0.0456,  0.0957],
        [-0.0074, -0.0045,  0.0490,  0.0440,  0.0982]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0087, -0.0053,  0.0511,  0.0456,  0.1045],
        [-0.0081, -0.0054,  0.0534,  0.0458,  0.1075],
        [-0.0074, -0.0049,  0.0520,  0.0447,  0.1027],
        [-0.0068, -0.0022,  0.0521,  0.0460,  0.1006],
        [-0.0091, -0.0043,  0.0505,  0.0457,  0.1009]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0063, -0.0029,  0.0566,  0.0481,  0.1097],
        [-0.0081, -0.0043,  0.0525,  0.0533,  0.1038],
        [-0.0086, -0.0045,  0.0550,  0.0495,  0.1131],
        [-0.0090, -0.0057,  0.0496,  0.0488,  0.1012],
        [-0.0075, -0.0048,  0.0522,  0.0470,  0.1038]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0088, -0.0056,  0.0544,  0.0488,  0.1103],
        [-0.0082, -0.0057,  0.0568,  0.0491,  0.1134],
        [-0.0075, -0.0051,  0.0552,  0.0479,  0.1085],
        [-0.0068, -0.0025,  0.0553,  0.0492,  0.1063],
        [-0.0092, -0.0046,  0.0537,  0.0489,  0.1066]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0064, -0.0032,  0.0601,  0.0515,  0.1158],
        [-0.0082, -0.0046,  0.0558,  0.0568,  0.1098],
        [-0.0087, -0.0048,  0.0585,  0.0530,  0.1193],
        [-0.0091, -0.0059,  0.0528,  0.0522,  0.1069],
        [-0.0076, -0.0050,  0.0554,  0.0503,  0.1095]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0089, -0.0058,  0.0578,  0.0522,  0.1163],
        [-0.0083, -0.0060,  0.0603,  0.0525,  0.1196],
        [-0.0076, -0.0053,  0.0586,  0.0512,  0.1144],
        [-0.0069, -0.0028,  0.0587,  0.0526,  0.1122],
        [-0.0094, -0.0048,  0.0570,  0.0523,  0.1125]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0065, -0.0035,  0.0637,  0.0551,  0.1222],
        [-0.0082, -0.0048,  0.0592,  0.0605,  0.1160],
        [-0.0089, -0.0051,  0.0621,  0.0567,  0.1258],
        [-0.0092, -0.0062,  0.0561,  0.0557,  0.1129],
        [-0.0077, -0.0053,  0.0588,  0.0537,  0.1156]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0090, -0.0061,  0.0614,  0.0558,  0.1226],
        [-0.0084, -0.0062,  0.0639,  0.0562,  0.1260],
        [-0.0077, -0.0056,  0.0621,  0.0548,  0.1207],
        [-0.0070, -0.0031,  0.0621,  0.0562,  0.1184],
        [-0.0095, -0.0051,  0.0605,  0.0558,  0.1187]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0066, -0.0038,  0.0675,  0.0589,  0.1288],
        [-0.0083, -0.0051,  0.0628,  0.0644,  0.1225],
        [-0.0090, -0.0054,  0.0660,  0.0605,  0.1325],
        [-0.0093, -0.0064,  0.0596,  0.0594,  0.1192],
        [-0.0079, -0.0055,  0.0624,  0.0573,  0.1218]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0091, -0.0064,  0.0651,  0.0595,  0.1292],
        [-0.0085, -0.0065,  0.0678,  0.0600,  0.1328],
        [-0.0078, -0.0058,  0.0658,  0.0585,  0.1271],
        [-0.0071, -0.0033,  0.0658,  0.0599,  0.1249],
        [-0.0096, -0.0054,  0.0642,  0.0595,  0.1251]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0067, -0.0040,  0.0715,  0.0629,  0.1357],
        [-0.0084, -0.0054,  0.0666,  0.0684,  0.1293],
        [-0.0091, -0.0056,  0.0700,  0.0646,  0.1396],
        [-0.0094, -0.0067,  0.0632,  0.0632,  0.1257],
        [-0.0080, -0.0058,  0.0662,  0.0610,  0.1284]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0093, -0.0066,  0.0690,  0.0634,  0.1360],
        [-0.0086, -0.0068,  0.0718,  0.0640,  0.1398],
        [-0.0079, -0.0061,  0.0697,  0.0624,  0.1339],
        [-0.0072, -0.0036,  0.0697,  0.0638,  0.1316],
        [-0.0097, -0.0057,  0.0680,  0.0634,  0.1319]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0068, -0.0043,  0.0757,  0.0670,  0.1429],
        [-0.0085, -0.0057,  0.0705,  0.0727,  0.1363],
        [-0.0092, -0.0059,  0.0743,  0.0689,  0.1469],
        [-0.0095, -0.0069,  0.0670,  0.0673,  0.1325],
        [-0.0081, -0.0060,  0.0701,  0.0649,  0.1352]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0094, -0.0069,  0.0731,  0.0675,  0.1431],
        [-0.0087, -0.0071,  0.0760,  0.0682,  0.1471],
        [-0.0080, -0.0063,  0.0738,  0.0664,  0.1409],
        [-0.0072, -0.0039,  0.0737,  0.0679,  0.1387],
        [-0.0098, -0.0059,  0.0720,  0.0675,  0.1389]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0069, -0.0046,  0.0801,  0.0714,  0.1505],
        [-0.0086, -0.0059,  0.0746,  0.0771,  0.1437],
        [-0.0093, -0.0062,  0.0787,  0.0733,  0.1546],
        [-0.0096, -0.0072,  0.0709,  0.0715,  0.1395],
        [-0.0082, -0.0062,  0.0743,  0.0691,  0.1423]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0095, -0.0072,  0.0773,  0.0718,  0.1505],
        [-0.0088, -0.0073,  0.0805,  0.0726,  0.1548],
        [-0.0082, -0.0065,  0.0781,  0.0707,  0.1482],
        [-0.0073, -0.0042,  0.0779,  0.0722,  0.1460],
        [-0.0099, -0.0062,  0.0762,  0.0718,  0.1462]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0070, -0.0049,  0.0846,  0.0760,  0.1583],
        [-0.0087, -0.0062,  0.0789,  0.0817,  0.1513],
        [-0.0094, -0.0065,  0.0834,  0.0780,  0.1626],
        [-0.0097, -0.0075,  0.0751,  0.0759,  0.1468],
        [-0.0083, -0.0065,  0.0786,  0.0734,  0.1497]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0096, -0.0074,  0.0818,  0.0763,  0.1582],
        [-0.0089, -0.0076,  0.0851,  0.0772,  0.1627],
        [-0.0083, -0.0068,  0.0825,  0.0751,  0.1558],
        [-0.0074, -0.0044,  0.0823,  0.0767,  0.1537],
        [-0.0100, -0.0065,  0.0806,  0.0763,  0.1538]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0070, -0.0052,  0.0894,  0.0808,  0.1665],
        [-0.0088, -0.0065,  0.0834,  0.0865,  0.1593],
        [-0.0095, -0.0067,  0.0882,  0.0829,  0.1709],
        [-0.0098, -0.0077,  0.0794,  0.0805,  0.1545],
        [-0.0084, -0.0067,  0.0831,  0.0779,  0.1574]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0097, -0.0077,  0.0865,  0.0810,  0.1662],
        [-0.0090, -0.0079,  0.0899,  0.0821,  0.1709],
        [-0.0084, -0.0070,  0.0872,  0.0797,  0.1637],
        [-0.0074, -0.0047,  0.0869,  0.0815,  0.1617],
        [-0.0100, -0.0068,  0.0852,  0.0810,  0.1618]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0071, -0.0054,  0.0944,  0.0859,  0.1750],
        [-0.0089, -0.0068,  0.0881,  0.0916,  0.1676],
        [-0.0096, -0.0070,  0.0933,  0.0880,  0.1795],
        [-0.0099, -0.0080,  0.0840,  0.0853,  0.1624],
        [-0.0086, -0.0070,  0.0878,  0.0826,  0.1654]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0099, -0.0079,  0.0913,  0.0859,  0.1745],
        [-0.0091, -0.0081,  0.0950,  0.0871,  0.1795],
        [-0.0085, -0.0073,  0.0920,  0.0846,  0.1719],
        [-0.0075, -0.0050,  0.0917,  0.0864,  0.1699],
        [-0.0101, -0.0071,  0.0900,  0.0860,  0.1700]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0072, -0.0057,  0.0996,  0.0911,  0.1839],
        [-0.0090, -0.0071,  0.0931,  0.0968,  0.1762],
        [-0.0097, -0.0073,  0.0986,  0.0933,  0.1886],
        [-0.0100, -0.0083,  0.0887,  0.0902,  0.1706],
        [-0.0087, -0.0073,  0.0927,  0.0875,  0.1737]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0100, -0.0082,  0.0964,  0.0911,  0.1832],
        [-0.0093, -0.0084,  0.1003,  0.0923,  0.1884],
        [-0.0087, -0.0075,  0.0971,  0.0897,  0.1805],
        [-0.0076, -0.0053,  0.0967,  0.0915,  0.1785],
        [-0.0102, -0.0074,  0.0950,  0.0911,  0.1786]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0073, -0.0060,  0.1050,  0.0966,  0.1931],
        [-0.0091, -0.0074,  0.0982,  0.1023,  0.1851],
        [-0.0098, -0.0076,  0.1041,  0.0990,  0.1980],
        [-0.0101, -0.0086,  0.0936,  0.0954,  0.1792],
        [-0.0088, -0.0075,  0.0978,  0.0926,  0.1824]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0101, -0.0085,  0.1017,  0.0965,  0.1922],
        [-0.0094, -0.0086,  0.1058,  0.0978,  0.1976],
        [-0.0088, -0.0078,  0.1024,  0.0950,  0.1894],
        [-0.0077, -0.0055,  0.1020,  0.0969,  0.1875],
        [-0.0103, -0.0077,  0.1003,  0.0965,  0.1876]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0074, -0.0063,  0.1107,  0.1023,  0.2027],
        [-0.0092, -0.0077,  0.1036,  0.1080,  0.1943],
        [-0.0099, -0.0079,  0.1099,  0.1048,  0.2079],
        [-0.0102, -0.0088,  0.0988,  0.1008,  0.1881],
        [-0.0088, -0.0078,  0.1032,  0.0980,  0.1914]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0102, -0.0088,  0.1073,  0.1021,  0.2015],
        [-0.0095, -0.0089,  0.1115,  0.1035,  0.2072],
        [-0.0089, -0.0081,  0.1079,  0.1005,  0.1986],
        [-0.0077, -0.0058,  0.1075,  0.1025,  0.1968],
        [-0.0104, -0.0080,  0.1057,  0.1021,  0.1968]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0075, -0.0066,  0.1166,  0.1083,  0.2126],
        [-0.0093, -0.0080,  0.1092,  0.1139,  0.2039],
        [-0.0099, -0.0083,  0.1159,  0.1110,  0.2181],
        [-0.0103, -0.0091,  0.1042,  0.1064,  0.1973],
        [-0.0089, -0.0081,  0.1088,  0.1036,  0.2008]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0103, -0.0091,  0.1131,  0.1079,  0.2112],
        [-0.0096, -0.0092,  0.1175,  0.1095,  0.2172],
        [-0.0090, -0.0084,  0.1137,  0.1062,  0.2081],
        [-0.0078, -0.0061,  0.1132,  0.1083,  0.2064],
        [-0.0105, -0.0083,  0.1114,  0.1079,  0.2064]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0076, -0.0069,  0.1228,  0.1145,  0.2229],
        [-0.0094, -0.0083,  0.1150,  0.1200,  0.2139],
        [-0.0100, -0.0086,  0.1223,  0.1174,  0.2287],
        [-0.0104, -0.0094,  0.1098,  0.1123,  0.2069],
        [-0.0090, -0.0084,  0.1146,  0.1094,  0.2105]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0105, -0.0094,  0.1191,  0.1140,  0.2212],
        [-0.0097, -0.0094,  0.1238,  0.1157,  0.2275],
        [-0.0091, -0.0086,  0.1197,  0.1121,  0.2180],
        [-0.0079, -0.0064,  0.1191,  0.1144,  0.2165],
        [-0.0106, -0.0087,  0.1174,  0.1140,  0.2164]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0077, -0.0072,  0.1292,  0.1210,  0.2336],
        [-0.0095, -0.0086,  0.1211,  0.1264,  0.2242],
        [-0.0100, -0.0089,  0.1288,  0.1240,  0.2397],
        [-0.0105, -0.0097,  0.1157,  0.1184,  0.2168],
        [-0.0091, -0.0087,  0.1206,  0.1155,  0.2205]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0106, -0.0097,  0.1253,  0.1203,  0.2317],
        [-0.0099, -0.0097,  0.1303,  0.1222,  0.2383],
        [-0.0093, -0.0089,  0.1259,  0.1183,  0.2283],
        [-0.0079, -0.0067,  0.1253,  0.1207,  0.2269],
        [-0.0107, -0.0090,  0.1236,  0.1203,  0.2268]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0078, -0.0075,  0.1359,  0.1277,  0.2447],
        [-0.0095, -0.0089,  0.1274,  0.1330,  0.2349],
        [-0.0101, -0.0093,  0.1357,  0.1309,  0.2512],
        [-0.0106, -0.0100,  0.1218,  0.1247,  0.2271],
        [-0.0092, -0.0090,  0.1269,  0.1218,  0.2309]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0106, -0.0100,  0.1319,  0.1269,  0.2425],
        [-0.0100, -0.0100,  0.1370,  0.1289,  0.2494],
        [-0.0094, -0.0092,  0.1323,  0.1248,  0.2389],
        [-0.0080, -0.0071,  0.1318,  0.1272,  0.2376],
        [-0.0107, -0.0093,  0.1300,  0.1268,  0.2375]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0079, -0.0078,  0.1429,  0.1347,  0.2563],
        [-0.0096, -0.0092,  0.1340,  0.1399,  0.2460],
        [-0.0101, -0.0096,  0.1428,  0.1381,  0.2630],
        [-0.0106, -0.0103,  0.1282,  0.1312,  0.2378],
        [-0.0093, -0.0093,  0.1334,  0.1284,  0.2417]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0107, -0.0103,  0.1387,  0.1338,  0.2538],
        [-0.0101, -0.0103,  0.1440,  0.1359,  0.2609],
        [-0.0095, -0.0095,  0.1391,  0.1315,  0.2500],
        [-0.0081, -0.0074,  0.1386,  0.1340,  0.2488],
        [-0.0108, -0.0096,  0.1368,  0.1336,  0.2487]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0079, -0.0081,  0.1501,  0.1420,  0.2683],
        [-0.0097, -0.0095,  0.1409,  0.1470,  0.2575],
        [-0.0102, -0.0100,  0.1502,  0.1456,  0.2753],
        [-0.0106, -0.0107,  0.1348,  0.1380,  0.2489],
        [-0.0094, -0.0096,  0.1402,  0.1352,  0.2530]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0108, -0.0107,  0.1458,  0.1410,  0.2654],
        [-0.0103, -0.0107,  0.1513,  0.1432,  0.2729],
        [-0.0096, -0.0098,  0.1461,  0.1385,  0.2614],
        [-0.0081, -0.0077,  0.1456,  0.1412,  0.2604],
        [-0.0108, -0.0100,  0.1437,  0.1407,  0.2602]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0080, -0.0084,  0.1577,  0.1496,  0.2806],
        [-0.0097, -0.0099,  0.1480,  0.1544,  0.2694],
        [-0.0102, -0.0103,  0.1579,  0.1533,  0.2881],
        [-0.0107, -0.0110,  0.1418,  0.1451,  0.2604],
        [-0.0095, -0.0099,  0.1472,  0.1423,  0.2646]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0108, -0.0110,  0.1532,  0.1484,  0.2775],
        [-0.0104, -0.0110,  0.1589,  0.1508,  0.2853],
        [-0.0096, -0.0101,  0.1533,  0.1458,  0.2733],
        [-0.0082, -0.0080,  0.1529,  0.1486,  0.2725],
        [-0.0109, -0.0103,  0.1510,  0.1481,  0.2721]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0080, -0.0087,  0.1655,  0.1575,  0.2935],
        [-0.0098, -0.0102,  0.1555,  0.1621,  0.2817],
        [-0.0102, -0.0107,  0.1659,  0.1614,  0.3013],
        [-0.0108, -0.0113,  0.1490,  0.1524,  0.2723],
        [-0.0096, -0.0102,  0.1546,  0.1497,  0.2766]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0109, -0.0114,  0.1608,  0.1562,  0.2901],
        [-0.0104, -0.0113,  0.1668,  0.1587,  0.2981],
        [-0.0097, -0.0104,  0.1609,  0.1534,  0.2855],
        [-0.0082, -0.0084,  0.1605,  0.1564,  0.2850],
        [-0.0109, -0.0106,  0.1586,  0.1557,  0.2845]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0081, -0.0091,  0.1737,  0.1657,  0.3067],
        [-0.0098, -0.0106,  0.1633,  0.1700,  0.2945],
        [-0.0102, -0.0111,  0.1742,  0.1699,  0.3149],
        [-0.0108, -0.0116,  0.1565,  0.1600,  0.2846],
        [-0.0097, -0.0106,  0.1623,  0.1575,  0.2891]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0109, -0.0117,  0.1687,  0.1643,  0.3030],
        [-0.0105, -0.0117,  0.1750,  0.1670,  0.3114],
        [-0.0097, -0.0107,  0.1687,  0.1613,  0.2982],
        [-0.0083, -0.0087,  0.1684,  0.1644,  0.2979],
        [-0.0110, -0.0110,  0.1664,  0.1637,  0.2973]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0081, -0.0094,  0.1821,  0.1742,  0.3205],
        [-0.0099, -0.0110,  0.1714,  0.1782,  0.3078],
        [-0.0102, -0.0115,  0.1829,  0.1786,  0.3290],
        [-0.0108, -0.0120,  0.1643,  0.1679,  0.2973],
        [-0.0097, -0.0109,  0.1702,  0.1655,  0.3021]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0110, -0.0121,  0.1770,  0.1727,  0.3165],
        [-0.0106, -0.0120,  0.1835,  0.1756,  0.3252],
        [-0.0098, -0.0110,  0.1768,  0.1695,  0.3114],
        [-0.0083, -0.0091,  0.1767,  0.1727,  0.3112],
        [-0.0110, -0.0113,  0.1746,  0.1719,  0.3106]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0082, -0.0097,  0.1909,  0.1831,  0.3347],
        [-0.0099, -0.0113,  0.1798,  0.1867,  0.3215],
        [-0.0103, -0.0118,  0.1918,  0.1877,  0.3436],
        [-0.0109, -0.0123,  0.1723,  0.1760,  0.3105],
        [-0.0098, -0.0113,  0.1784,  0.1739,  0.3155]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0110, -0.0124,  0.1856,  0.1814,  0.3304],
        [-0.0106, -0.0124,  0.1924,  0.1845,  0.3394],
        [-0.0098, -0.0114,  0.1853,  0.1780,  0.3249],
        [-0.0084, -0.0094,  0.1852,  0.1814,  0.3251],
        [-0.0111, -0.0117,  0.1830,  0.1805,  0.3243]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0082, -0.0101,  0.2000,  0.1923,  0.3494],
        [-0.0100, -0.0117,  0.1885,  0.1955,  0.3356],
        [-0.0103, -0.0122,  0.2012,  0.1972,  0.3588],
        [-0.0109, -0.0126,  0.1807,  0.1845,  0.3240],
        [-0.0098, -0.0116,  0.1870,  0.1825,  0.3293]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0111, -0.0128,  0.1945,  0.1904,  0.3448],
        [-0.0107, -0.0127,  0.2016,  0.1938,  0.3542],
        [-0.0099, -0.0117,  0.1940,  0.1868,  0.3390],
        [-0.0084, -0.0098,  0.1940,  0.1903,  0.3393],
        [-0.0111, -0.0121,  0.1918,  0.1893,  0.3384]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0083, -0.0104,  0.2094,  0.2019,  0.3647],
        [-0.0100, -0.0121,  0.1975,  0.2046,  0.3502],
        [-0.0103, -0.0126,  0.2108,  0.2070,  0.3744],
        [-0.0110, -0.0130,  0.1894,  0.1932,  0.3380],
        [-0.0099, -0.0120,  0.1958,  0.1915,  0.3436]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0111, -0.0132,  0.2037,  0.1997,  0.3596],
        [-0.0107, -0.0131,  0.2111,  0.2034,  0.3694],
        [-0.0099, -0.0121,  0.2031,  0.1960,  0.3536],
        [-0.0085, -0.0101,  0.2032,  0.1996,  0.3541],
        [-0.0112, -0.0124,  0.2009,  0.1985,  0.3530]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0083, -0.0108,  0.2192,  0.2118,  0.3805],
        [-0.0101, -0.0125,  0.2069,  0.2140,  0.3652],
        [-0.0104, -0.0130,  0.2209,  0.2172,  0.3905],
        [-0.0110, -0.0133,  0.1984,  0.2022,  0.3525],
        [-0.0099, -0.0123,  0.2050,  0.2007,  0.3583]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0112, -0.0136,  0.2133,  0.2093,  0.3749],
        [-0.0108, -0.0135,  0.2209,  0.2134,  0.3852],
        [-0.0100, -0.0125,  0.2125,  0.2054,  0.3686],
        [-0.0085, -0.0105,  0.2126,  0.2092,  0.3693],
        [-0.0112, -0.0128,  0.2103,  0.2079,  0.3681]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0084, -0.0112,  0.2294,  0.2221,  0.3968],
        [-0.0101, -0.0129,  0.2166,  0.2238,  0.3808],
        [-0.0104, -0.0134,  0.2312,  0.2277,  0.4072],
        [-0.0111, -0.0137,  0.2077,  0.2115,  0.3674],
        [-0.0100, -0.0127,  0.2145,  0.2103,  0.3735]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0113, -0.0139,  0.2232,  0.2193,  0.3907],
        [-0.0108, -0.0139,  0.2311,  0.2237,  0.4014],
        [-0.0100, -0.0128,  0.2222,  0.2152,  0.3841],
        [-0.0086, -0.0109,  0.2225,  0.2191,  0.3850],
        [-0.0113, -0.0132,  0.2200,  0.2177,  0.3837]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0084, -0.0116,  0.2399,  0.2328,  0.4136],
        [-0.0102, -0.0132,  0.2266,  0.2338,  0.3968],
        [-0.0105, -0.0139,  0.2420,  0.2386,  0.4244],
        [-0.0112, -0.0140,  0.2172,  0.2212,  0.3828],
        [-0.0100, -0.0130,  0.2243,  0.2203,  0.3893]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0113, -0.0143,  0.2334,  0.2296,  0.4071],
        [-0.0109, -0.0143,  0.2416,  0.2343,  0.4182],
        [-0.0101, -0.0132,  0.2322,  0.2254,  0.4001],
        [-0.0086, -0.0112,  0.2326,  0.2294,  0.4012],
        [-0.0113, -0.0135,  0.2301,  0.2279,  0.3997]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0085, -0.0120,  0.2508,  0.2438,  0.4309],
        [-0.0102, -0.0136,  0.2370,  0.2442,  0.4134],
        [-0.0105, -0.0143,  0.2531,  0.2499,  0.4421],
        [-0.0112, -0.0144,  0.2271,  0.2311,  0.3986],
        [-0.0101, -0.0134,  0.2345,  0.2305,  0.4055]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0114, -0.0147,  0.2440,  0.2403,  0.4239],
        [-0.0109, -0.0147,  0.2525,  0.2454,  0.4355],
        [-0.0101, -0.0136,  0.2426,  0.2359,  0.4165],
        [-0.0087, -0.0116,  0.2431,  0.2400,  0.4179],
        [-0.0114, -0.0139,  0.2405,  0.2384,  0.4163]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0085, -0.0124,  0.2620,  0.2552,  0.4488],
        [-0.0103, -0.0140,  0.2477,  0.2550,  0.4304],
        [-0.0106, -0.0147,  0.2646,  0.2616,  0.4604],
        [-0.0113, -0.0147,  0.2374,  0.2414,  0.4149],
        [-0.0102, -0.0138,  0.2450,  0.2412,  0.4222]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0115, -0.0151,  0.2549,  0.2513,  0.4413],
        [-0.0110, -0.0151,  0.2637,  0.2568,  0.4533],
        [-0.0102, -0.0139,  0.2533,  0.2467,  0.4335],
        [-0.0087, -0.0120,  0.2539,  0.2509,  0.4351],
        [-0.0114, -0.0143,  0.2512,  0.2492,  0.4333]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0086, -0.0128,  0.2737,  0.2670,  0.4672],
        [-0.0104, -0.0144,  0.2587,  0.2661,  0.4479],
        [-0.0107, -0.0151,  0.2765,  0.2736,  0.4792],
        [-0.0113, -0.0151,  0.2479,  0.2520,  0.4316],
        [-0.0102, -0.0141,  0.2558,  0.2521,  0.4394]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0116, -0.0155,  0.2662,  0.2627,  0.4591],
        [-0.0110, -0.0155,  0.2753,  0.2685,  0.4716],
        [-0.0103, -0.0143,  0.2644,  0.2579,  0.4510],
        [-0.0087, -0.0124,  0.2651,  0.2622,  0.4528],
        [-0.0115, -0.0147,  0.2622,  0.2604,  0.4508]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0086, -0.0132,  0.2856,  0.2791,  0.4862],
        [-0.0104, -0.0148,  0.2701,  0.2775,  0.4660],
        [-0.0107, -0.0155,  0.2888,  0.2860,  0.4986],
        [-0.0114, -0.0155,  0.2588,  0.2629,  0.4488],
        [-0.0103, -0.0145,  0.2670,  0.2634,  0.4572]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0117, -0.0159,  0.2778,  0.2744,  0.4775],
        [-0.0111, -0.0159,  0.2873,  0.2806,  0.4904],
        [-0.0104, -0.0147,  0.2758,  0.2694,  0.4690],
        [-0.0088, -0.0127,  0.2766,  0.2738,  0.4710],
        [-0.0116, -0.0150,  0.2736,  0.2719,  0.4689]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0087, -0.0137,  0.2980,  0.2917,  0.5057],
        [-0.0105, -0.0152,  0.2818,  0.2892,  0.4845],
        [-0.0108, -0.0160,  0.3015,  0.2988,  0.5186],
        [-0.0115, -0.0158,  0.2700,  0.2741,  0.4665],
        [-0.0104, -0.0149,  0.2785,  0.2750,  0.4754]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0118, -0.0163,  0.2898,  0.2865,  0.4965],
        [-0.0111, -0.0163,  0.2997,  0.2931,  0.5098],
        [-0.0104, -0.0151,  0.2876,  0.2812,  0.4875],
        [-0.0088, -0.0131,  0.2885,  0.2858,  0.4898],
        [-0.0116, -0.0154,  0.2854,  0.2837,  0.4875]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0087, -0.0141,  0.3108,  0.3046,  0.5258],
        [-0.0106, -0.0156,  0.2939,  0.3013,  0.5035],
        [-0.0108, -0.0164,  0.3146,  0.3120,  0.5392],
        [-0.0115, -0.0162,  0.2816,  0.2857,  0.4847],
        [-0.0105, -0.0153,  0.2904,  0.2870,  0.4942]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0119, -0.0167,  0.3023,  0.2989,  0.5159],
        [-0.0112, -0.0167,  0.3125,  0.3059,  0.5298],
        [-0.0105, -0.0155,  0.2997,  0.2934,  0.5066],
        [-0.0089, -0.0135,  0.3008,  0.2982,  0.5090],
        [-0.0117, -0.0158,  0.2976,  0.2959,  0.5066]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0088, -0.0145,  0.3241,  0.3178,  0.5464],
        [-0.0107, -0.0160,  0.3064,  0.3137,  0.5231],
        [-0.0109, -0.0168,  0.3282,  0.3256,  0.5603],
        [-0.0116, -0.0166,  0.2935,  0.2976,  0.5034],
        [-0.0106, -0.0156,  0.3027,  0.2993,  0.5135]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0119, -0.0171,  0.3151,  0.3117,  0.5360],
        [-0.0112, -0.0171,  0.3256,  0.3191,  0.5503],
        [-0.0106, -0.0159,  0.3123,  0.3060,  0.5263],
        [-0.0089, -0.0139,  0.3135,  0.3109,  0.5289],
        [-0.0118, -0.0162,  0.3101,  0.3085,  0.5262]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0088, -0.0149,  0.3377,  0.3315,  0.5677],
        [-0.0107, -0.0164,  0.3193,  0.3265,  0.5432],
        [-0.0109, -0.0172,  0.3421,  0.3396,  0.5821],
        [-0.0116, -0.0169,  0.3058,  0.3098,  0.5226],
        [-0.0107, -0.0160,  0.3154,  0.3120,  0.5333]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0120, -0.0175,  0.3283,  0.3249,  0.5566],
        [-0.0113, -0.0175,  0.3392,  0.3327,  0.5714],
        [-0.0107, -0.0163,  0.3252,  0.3189,  0.5465],
        [-0.0090, -0.0143,  0.3266,  0.3239,  0.5493],
        [-0.0119, -0.0166,  0.3230,  0.3214,  0.5464]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0089, -0.0153,  0.3517,  0.3456,  0.5895],
        [-0.0108, -0.0168,  0.3325,  0.3397,  0.5638],
        [-0.0110, -0.0176,  0.3565,  0.3540,  0.6045],
        [-0.0116, -0.0173,  0.3184,  0.3224,  0.5423],
        [-0.0107, -0.0164,  0.3285,  0.3250,  0.5536]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0121, -0.0179,  0.3419,  0.3385,  0.5777],
        [-0.0114, -0.0179,  0.3532,  0.3467,  0.5931],
        [-0.0108, -0.0166,  0.3386,  0.3323,  0.5673],
        [-0.0091, -0.0147,  0.3401,  0.3374,  0.5703],
        [-0.0120, -0.0170,  0.3363,  0.3347,  0.5671]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0089, -0.0157,  0.3662,  0.3601,  0.6119],
        [-0.0108, -0.0172,  0.3461,  0.3533,  0.5850],
        [-0.0110, -0.0181,  0.3714,  0.3689,  0.6275],
        [-0.0117, -0.0177,  0.3314,  0.3353,  0.5625],
        [-0.0108, -0.0168,  0.3419,  0.3385,  0.5745]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0122, -0.0183,  0.3559,  0.3524,  0.5994],
        [-0.0114, -0.0183,  0.3676,  0.3611,  0.6155],
        [-0.0109, -0.0170,  0.3523,  0.3460,  0.5886],
        [-0.0092, -0.0151,  0.3539,  0.3512,  0.5919],
        [-0.0121, -0.0174,  0.3500,  0.3484,  0.5883]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0090, -0.0161,  0.3811,  0.3750,  0.6350],
        [-0.0109, -0.0176,  0.3601,  0.3672,  0.6067],
        [-0.0111, -0.0185,  0.3866,  0.3841,  0.6512],
        [-0.0117, -0.0180,  0.3447,  0.3486,  0.5832],
        [-0.0109, -0.0172,  0.3557,  0.3523,  0.5960]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0123, -0.0187,  0.3703,  0.3668,  0.6217],
        [-0.0115, -0.0187,  0.3824,  0.3759,  0.6384],
        [-0.0110, -0.0174,  0.3664,  0.3601,  0.6105],
        [-0.0093, -0.0155,  0.3682,  0.3655,  0.6140],
        [-0.0121, -0.0178,  0.3640,  0.3624,  0.6101]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0091, -0.0165,  0.3964,  0.3904,  0.6588],
        [-0.0109, -0.0180,  0.3744,  0.3814,  0.6290],
        [-0.0112, -0.0189,  0.4023,  0.3998,  0.6755],
        [-0.0117, -0.0184,  0.3584,  0.3622,  0.6044],
        [-0.0110, -0.0175,  0.3700,  0.3665,  0.6180]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0123, -0.0190,  0.3851,  0.3815,  0.6446],
        [-0.0116, -0.0191,  0.3976,  0.3911,  0.6618],
        [-0.0110, -0.0177,  0.3810,  0.3746,  0.6329],
        [-0.0094, -0.0159,  0.3828,  0.3801,  0.6366],
        [-0.0122, -0.0182,  0.3784,  0.3768,  0.6324]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0092, -0.0169,  0.4122,  0.4061,  0.6831],
        [-0.0110, -0.0184,  0.3892,  0.3961,  0.6518],
        [-0.0112, -0.0193,  0.4184,  0.4159,  0.7003],
        [-0.0118, -0.0188,  0.3725,  0.3762,  0.6262],
        [-0.0111, -0.0179,  0.3846,  0.3811,  0.6406]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0124, -0.0194,  0.4003,  0.3967,  0.6680],
        [-0.0117, -0.0195,  0.4132,  0.4067,  0.6859],
        [-0.0111, -0.0181,  0.3959,  0.3894,  0.6559],
        [-0.0095, -0.0163,  0.3979,  0.3951,  0.6599],
        [-0.0123, -0.0186,  0.3933,  0.3916,  0.6553]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0093, -0.0174,  0.4284,  0.4223,  0.7081],
        [-0.0110, -0.0188,  0.4043,  0.4112,  0.6752],
        [-0.0113, -0.0198,  0.4349,  0.4325,  0.7259],
        [-0.0118, -0.0192,  0.3869,  0.3906,  0.6484],
        [-0.0111, -0.0182,  0.3996,  0.3961,  0.6638]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0125, -0.0198,  0.4160,  0.4123,  0.6920],
        [-0.0118, -0.0199,  0.4293,  0.4227,  0.7106],
        [-0.0112, -0.0185,  0.4112,  0.4047,  0.6794],
        [-0.0095, -0.0166,  0.4134,  0.4105,  0.6838],
        [-0.0124, -0.0190,  0.4085,  0.4069,  0.6788]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0093, -0.0178,  0.4450,  0.4389,  0.7337],
        [-0.0110, -0.0191,  0.4199,  0.4266,  0.6991],
        [-0.0114, -0.0202,  0.4520,  0.4494,  0.7520],
        [-0.0118, -0.0195,  0.4017,  0.4053,  0.6712],
        [-0.0112, -0.0186,  0.4150,  0.4115,  0.6875]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0126, -0.0202,  0.4320,  0.4282,  0.7166],
        [-0.0119, -0.0203,  0.4458,  0.4391,  0.7359],
        [-0.0113, -0.0188,  0.4269,  0.4203,  0.7035],
        [-0.0095, -0.0170,  0.4293,  0.4264,  0.7083],
        [-0.0125, -0.0194,  0.4242,  0.4225,  0.7029]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0094, -0.0182,  0.4621,  0.4560,  0.7599],
        [-0.0111, -0.0195,  0.4359,  0.4425,  0.7235],
        [-0.0115, -0.0206,  0.4695,  0.4668,  0.7788],
        [-0.0118, -0.0199,  0.4169,  0.4204,  0.6945],
        [-0.0112, -0.0189,  0.4309,  0.4273,  0.7119]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0127, -0.0206,  0.4485,  0.4446,  0.7418],
        [-0.0119, -0.0207,  0.4627,  0.4560,  0.7618],
        [-0.0114, -0.0192,  0.4430,  0.4364,  0.7282],
        [-0.0095, -0.0173,  0.4457,  0.4426,  0.7334],
        [-0.0126, -0.0198,  0.4403,  0.4385,  0.7275]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0186,  0.4797,  0.4734,  0.7868],
        [-0.0111, -0.0199,  0.4522,  0.4587,  0.7486],
        [-0.0115, -0.0210,  0.4874,  0.4847,  0.8062],
        [-0.0118, -0.0203,  0.4325,  0.4359,  0.7183],
        [-0.0112, -0.0192,  0.4472,  0.4435,  0.7368]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0128, -0.0210,  0.4654,  0.4614,  0.7676],
        [-0.0120, -0.0211,  0.4800,  0.4733,  0.7883],
        [-0.0115, -0.0196,  0.4596,  0.4528,  0.7535],
        [-0.0095, -0.0177,  0.4625,  0.4593,  0.7591],
        [-0.0126, -0.0201,  0.4568,  0.4549,  0.7528]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0190,  0.4977,  0.4914,  0.8144],
        [-0.0111, -0.0203,  0.4689,  0.4753,  0.7742],
        [-0.0115, -0.0214,  0.5059,  0.5030,  0.8344],
        [-0.0118, -0.0206,  0.4484,  0.4517,  0.7426],
        [-0.0112, -0.0195,  0.4639,  0.4601,  0.7624]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0128, -0.0213,  0.4827,  0.4786,  0.7941],
        [-0.0121, -0.0215,  0.4978,  0.4909,  0.8153],
        [-0.0115, -0.0199,  0.4765,  0.4696,  0.7793],
        [-0.0095, -0.0180,  0.4797,  0.4764,  0.7854],
        [-0.0126, -0.0204,  0.4737,  0.4717,  0.7786]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0194,  0.5162,  0.5097,  0.8425],
        [-0.0111, -0.0207,  0.4861,  0.4923,  0.8003],
        [-0.0116, -0.0218,  0.5247,  0.5217,  0.8631],
        [-0.0119, -0.0210,  0.4647,  0.4679,  0.7675],
        [-0.0112, -0.0199,  0.4810,  0.4771,  0.7885]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0128, -0.0217,  0.5005,  0.4962,  0.8211],
        [-0.0121, -0.0218,  0.5161,  0.5091,  0.8431],
        [-0.0115, -0.0203,  0.4939,  0.4869,  0.8058],
        [-0.0095, -0.0184,  0.4973,  0.4939,  0.8123],
        [-0.0126, -0.0208,  0.4910,  0.4889,  0.8050]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0197,  0.5351,  0.5285,  0.8714],
        [-0.0111, -0.0211,  0.5036,  0.5097,  0.8270],
        [-0.0116, -0.0222,  0.5441,  0.5409,  0.8925],
        [-0.0119, -0.0213,  0.4815,  0.4845,  0.7929],
        [-0.0112, -0.0202,  0.4985,  0.4945,  0.8152]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0128, -0.0220,  0.5186,  0.5142,  0.8487],
        [-0.0121, -0.0222,  0.5348,  0.5276,  0.8715],
        [-0.0115, -0.0206,  0.5117,  0.5045,  0.8328],
        [-0.0096, -0.0187,  0.5154,  0.5118,  0.8398],
        [-0.0126, -0.0211,  0.5088,  0.5065,  0.8320]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0201,  0.5544,  0.5477,  0.9008],
        [-0.0112, -0.0215,  0.5215,  0.5275,  0.8542],
        [-0.0116, -0.0226,  0.5639,  0.5605,  0.9226],
        [-0.0119, -0.0217,  0.4985,  0.5014,  0.8188],
        [-0.0112, -0.0205,  0.5165,  0.5123,  0.8425]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0129, -0.0224,  0.5372,  0.5326,  0.8769],
        [-0.0121, -0.0226,  0.5539,  0.5465,  0.9004],
        [-0.0115, -0.0209,  0.5299,  0.5225,  0.8605],
        [-0.0096, -0.0191,  0.5339,  0.5302,  0.8680],
        [-0.0127, -0.0215,  0.5270,  0.5246,  0.8596]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0205,  0.5742,  0.5674,  0.9309],
        [-0.0112, -0.0218,  0.5399,  0.5457,  0.8820],
        [-0.0116, -0.0230,  0.5841,  0.5806,  0.9533],
        [-0.0119, -0.0220,  0.5160,  0.5187,  0.8452],
        [-0.0112, -0.0208,  0.5348,  0.5305,  0.8703]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0129, -0.0227,  0.5562,  0.5514,  0.9057],
        [-0.0122, -0.0229,  0.5734,  0.5658,  0.9300],
        [-0.0116, -0.0213,  0.5486,  0.5410,  0.8888],
        [-0.0096, -0.0194,  0.5528,  0.5489,  0.8967],
        [-0.0127, -0.0218,  0.5456,  0.5430,  0.8878]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0209,  0.5945,  0.5875,  0.9617],
        [-0.0112, -0.0222,  0.5586,  0.5642,  0.9104],
        [-0.0116, -0.0234,  0.6048,  0.6011,  0.9846],
        [-0.0119, -0.0224,  0.5338,  0.5364,  0.8722],
        [-0.0112, -0.0212,  0.5536,  0.5491,  0.8987]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0129, -0.0231,  0.5757,  0.5706,  0.9351],
        [-0.0122, -0.0233,  0.5934,  0.5856,  0.9602],
        [-0.0116, -0.0216,  0.5677,  0.5599,  0.9176],
        [-0.0096, -0.0197,  0.5722,  0.5681,  0.9260],
        [-0.0127, -0.0221,  0.5646,  0.5618,  0.9166]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0212,  0.6153,  0.6080,  0.9930],
        [-0.0113, -0.0226,  0.5777,  0.5831,  0.9392],
        [-0.0117, -0.0238,  0.6260,  0.6221,  1.0166],
        [-0.0119, -0.0227,  0.5521,  0.5544,  0.8997],
        [-0.0113, -0.0215,  0.5728,  0.5682,  0.9278]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0129, -0.0234,  0.5956,  0.5903,  0.9650],
        [-0.0122, -0.0236,  0.6138,  0.6058,  0.9909],
        [-0.0116, -0.0220,  0.5872,  0.5791,  0.9471],
        [-0.0096, -0.0201,  0.5919,  0.5877,  0.9559],
        [-0.0127, -0.0225,  0.5840,  0.5810,  0.9459]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0095, -0.0216,  0.6365,  0.6290,  1.0250],
        [-0.0113, -0.0230,  0.5973,  0.6024,  0.9686],
        [-0.0117, -0.0241,  0.6477,  0.6435,  1.0492],
        [-0.0119, -0.0230,  0.5707,  0.5728,  0.9277],
        [-0.0113, -0.0218,  0.5924,  0.5876,  0.9574]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0129, -0.0237,  0.6159,  0.6104,  0.9956],
        [-0.0122, -0.0240,  0.6346,  0.6264,  1.0223],
        [-0.0116, -0.0223,  0.6071,  0.5989,  0.9771],
        [-0.0096, -0.0204,  0.6122,  0.6078,  0.9864],
        [-0.0127, -0.0228,  0.6039,  0.6007,  0.9758]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0220,  0.6581,  0.6505,  1.0577],
        [-0.0113, -0.0233,  0.6173,  0.6221,  0.9987],
        [-0.0117, -0.0245,  0.6698,  0.6654,  1.0824],
        [-0.0119, -0.0233,  0.5897,  0.5916,  0.9563],
        [-0.0113, -0.0221,  0.6125,  0.6075,  0.9876]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0241,  0.6366,  0.6310,  1.0268],
        [-0.0122, -0.0244,  0.6559,  0.6474,  1.0542],
        [-0.0116, -0.0227,  0.6275,  0.6190,  1.0077],
        [-0.0096, -0.0207,  0.6328,  0.6282,  1.0175],
        [-0.0127, -0.0231,  0.6241,  0.6208,  1.0062]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0223,  0.6802,  0.6724,  1.0909],
        [-0.0113, -0.0236,  0.6376,  0.6423,  1.0293],
        [-0.0117, -0.0249,  0.6923,  0.6878,  1.1163],
        [-0.0119, -0.0236,  0.6091,  0.6107,  0.9853],
        [-0.0113, -0.0224,  0.6330,  0.6278,  1.0184]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0244,  0.6578,  0.6520,  1.0586],
        [-0.0122, -0.0247,  0.6776,  0.6689,  1.0867],
        [-0.0116, -0.0230,  0.6483,  0.6396,  1.0388],
        [-0.0096, -0.0210,  0.6539,  0.6491,  1.0491],
        [-0.0127, -0.0235,  0.6448,  0.6413,  1.0372]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0227,  0.7028,  0.6947,  1.1248],
        [-0.0113, -0.0240,  0.6584,  0.6628,  1.0604],
        [-0.0117, -0.0252,  0.7154,  0.7106,  1.1508],
        [-0.0119, -0.0239,  0.6289,  0.6303,  1.0149],
        [-0.0113, -0.0227,  0.6539,  0.6485,  1.0497]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0248,  0.6794,  0.6734,  1.0909],
        [-0.0122, -0.0251,  0.6998,  0.6909,  1.1199],
        [-0.0117, -0.0233,  0.6695,  0.6606,  1.0706],
        [-0.0096, -0.0214,  0.6754,  0.6705,  1.0814],
        [-0.0127, -0.0238,  0.6659,  0.6621,  1.0688]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0231,  0.7258,  0.7175,  1.1592],
        [-0.0113, -0.0243,  0.6796,  0.6837,  1.0920],
        [-0.0117, -0.0256,  0.7389,  0.7339,  1.1859],
        [-0.0119, -0.0242,  0.6490,  0.6502,  1.0450],
        [-0.0113, -0.0230,  0.6752,  0.6697,  1.0816]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0251,  0.7015,  0.6952,  1.1238],
        [-0.0122, -0.0254,  0.7224,  0.7133,  1.1536],
        [-0.0117, -0.0236,  0.6911,  0.6821,  1.1029],
        [-0.0096, -0.0217,  0.6974,  0.6922,  1.1142],
        [-0.0127, -0.0241,  0.6874,  0.6835,  1.1009]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0234,  0.7493,  0.7409,  1.1943],
        [-0.0113, -0.0246,  0.7012,  0.7050,  1.1242],
        [-0.0117, -0.0260,  0.7628,  0.7577,  1.2216],
        [-0.0119, -0.0245,  0.6696,  0.6705,  1.0756],
        [-0.0113, -0.0233,  0.6969,  0.6912,  1.1141]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0255,  0.7239,  0.7175,  1.1572],
        [-0.0122, -0.0257,  0.7455,  0.7361,  1.1879],
        [-0.0117, -0.0240,  0.7132,  0.7039,  1.1357],
        [-0.0096, -0.0220,  0.7198,  0.7144,  1.1477],
        [-0.0127, -0.0245,  0.7093,  0.7052,  1.1336]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0238,  0.7733,  0.7646,  1.2300],
        [-0.0113, -0.0250,  0.7232,  0.7267,  1.1569],
        [-0.0117, -0.0264,  0.7872,  0.7819,  1.2579],
        [-0.0119, -0.0248,  0.6905,  0.6912,  1.1067],
        [-0.0113, -0.0236,  0.7190,  0.7131,  1.1470]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0258,  0.7468,  0.7401,  1.1912],
        [-0.0122, -0.0261,  0.7689,  0.7593,  1.2227],
        [-0.0117, -0.0243,  0.7356,  0.7262,  1.1691],
        [-0.0096, -0.0223,  0.7426,  0.7370,  1.1816],
        [-0.0127, -0.0248,  0.7317,  0.7273,  1.1668]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0242,  0.7977,  0.7888,  1.2664],
        [-0.0113, -0.0253,  0.7456,  0.7488,  1.1901],
        [-0.0117, -0.0268,  0.8121,  0.8066,  1.2948],
        [-0.0118, -0.0252,  0.7119,  0.7122,  1.1383],
        [-0.0113, -0.0239,  0.7416,  0.7354,  1.1805]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0262,  0.7701,  0.7632,  1.2257],
        [-0.0122, -0.0264,  0.7928,  0.7830,  1.2581],
        [-0.0117, -0.0246,  0.7585,  0.7488,  1.2030],
        [-0.0096, -0.0227,  0.7658,  0.7601,  1.2161],
        [-0.0127, -0.0252,  0.7545,  0.7499,  1.2006]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0245,  0.8226,  0.8135,  1.3032],
        [-0.0113, -0.0257,  0.7684,  0.7713,  1.2238],
        [-0.0118, -0.0272,  0.8375,  0.8317,  1.3323],
        [-0.0118, -0.0255,  0.7335,  0.7336,  1.1704],
        [-0.0113, -0.0243,  0.7645,  0.7582,  1.2145]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0266,  0.7939,  0.7867,  1.2608],
        [-0.0122, -0.0268,  0.8172,  0.8071,  1.2940],
        [-0.0117, -0.0249,  0.7818,  0.7719,  1.2375],
        [-0.0096, -0.0231,  0.7895,  0.7835,  1.2511],
        [-0.0127, -0.0255,  0.7777,  0.7728,  1.2349]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0249,  0.8479,  0.8386,  1.3407],
        [-0.0113, -0.0260,  0.7916,  0.7941,  1.2580],
        [-0.0118, -0.0275,  0.8633,  0.8573,  1.3705],
        [-0.0118, -0.0258,  0.7556,  0.7554,  1.2029],
        [-0.0113, -0.0246,  0.7879,  0.7812,  1.2490]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0130, -0.0269,  0.8180,  0.8106,  1.2964],
        [-0.0122, -0.0271,  0.8419,  0.8315,  1.3305],
        [-0.0117, -0.0253,  0.8055,  0.7953,  1.2724],
        [-0.0096, -0.0234,  0.8136,  0.8074,  1.2867],
        [-0.0128, -0.0259,  0.8013,  0.7962,  1.2697]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0252,  0.8737,  0.8641,  1.3787],
        [-0.0113, -0.0264,  0.8151,  0.8173,  1.2927],
        [-0.0118, -0.0279,  0.8896,  0.8833,  1.4092],
        [-0.0118, -0.0261,  0.7781,  0.7775,  1.2360],
        [-0.0113, -0.0249,  0.8116,  0.8047,  1.2840]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0131, -0.0273,  0.8426,  0.8350,  1.3326],
        [-0.0121, -0.0275,  0.8671,  0.8564,  1.3675],
        [-0.0117, -0.0256,  0.8296,  0.8191,  1.3078],
        [-0.0096, -0.0238,  0.8381,  0.8317,  1.3228],
        [-0.0128, -0.0262,  0.8252,  0.8199,  1.3050]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0256,  0.8999,  0.8900,  1.4172],
        [-0.0112, -0.0267,  0.8390,  0.8409,  1.3278],
        [-0.0118, -0.0283,  0.9163,  0.9098,  1.4484],
        [-0.0118, -0.0265,  0.8009,  0.8001,  1.2695],
        [-0.0112, -0.0252,  0.8358,  0.8286,  1.3195]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0131, -0.0277,  0.8675,  0.8597,  1.3692],
        [-0.0121, -0.0278,  0.8927,  0.8817,  1.4050],
        [-0.0117, -0.0259,  0.8540,  0.8433,  1.3437],
        [-0.0096, -0.0241,  0.8630,  0.8563,  1.3594],
        [-0.0128, -0.0266,  0.8496,  0.8441,  1.3408]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0259,  0.9264,  0.9163,  1.4563],
        [-0.0112, -0.0271,  0.8633,  0.8649,  1.3634],
        [-0.0118, -0.0287,  0.9434,  0.9367,  1.4882],
        [-0.0117, -0.0268,  0.8240,  0.8229,  1.3035],
        [-0.0112, -0.0255,  0.8603,  0.8528,  1.3555]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0131, -0.0281,  0.8929,  0.8848,  1.4063],
        [-0.0121, -0.0281,  0.9186,  0.9074,  1.4430],
        [-0.0117, -0.0263,  0.8788,  0.8678,  1.3801],
        [-0.0096, -0.0245,  0.8883,  0.8814,  1.3965],
        [-0.0128, -0.0270,  0.8744,  0.8686,  1.3771]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0263,  0.9535,  0.9431,  1.4959],
        [-0.0112, -0.0274,  0.8879,  0.8892,  1.3995],
        [-0.0118, -0.0291,  0.9709,  0.9640,  1.5285],
        [-0.0117, -0.0271,  0.8475,  0.8462,  1.3379],
        [-0.0112, -0.0258,  0.8852,  0.8775,  1.3919]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0131, -0.0284,  0.9187,  0.9104,  1.4440],
        [-0.0121, -0.0285,  0.9450,  0.9335,  1.4815],
        [-0.0117, -0.0266,  0.9040,  0.8927,  1.4169],
        [-0.0096, -0.0249,  0.9139,  0.9069,  1.4341],
        [-0.0128, -0.0273,  0.8995,  0.8935,  1.4139]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0267,  0.9809,  0.9704,  1.5360],
        [-0.0112, -0.0278,  0.9129,  0.9139,  1.4360],
        [-0.0118, -0.0295,  0.9989,  0.9917,  1.5693],
        [-0.0117, -0.0275,  0.8714,  0.8697,  1.3727],
        [-0.0112, -0.0261,  0.9105,  0.9025,  1.4289]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [4],
        [4],
        [4],
        [4]]) torch.int64
the out mean tensor([[-0.0131, -0.0288,  0.9448,  0.9363,  1.4822],
        [-0.0121, -0.0289,  0.9718,  0.9601,  1.5205],
        [-0.0117, -0.0269,  0.9296,  0.9181,  1.4542],
        [-0.0096, -0.0252,  0.9400,  0.9327,  1.4721],
        [-0.0128, -0.0277,  0.9251,  0.9188,  1.4512]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])
the action is: torch.Size([5, 1]) tensor([[4],
        [3],
        [4],
        [4],
        [2]]) torch.int64
the out mean tensor([[-0.0096, -0.0271,  1.0088,  0.9980,  1.5766],
        [-0.0112, -0.0281,  0.9383,  0.9389,  1.4729],
        [-0.0118, -0.0299,  1.0273,  1.0199,  1.6106],
        [-0.0117, -0.0278,  0.8956,  0.8936,  1.4079],
        [-0.0112, -0.0265,  0.9361,  0.9280,  1.4662]],
       grad_fn=<MeanBackward1>)
tensor([4, 4, 4, 4, 4])